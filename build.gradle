buildscript{ 
  apply from: 'buildscript.gradle'
}

apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'groovy'
apply from: 'cobertura.gradle'
apply from: 'integTest.gradle'

repositories { 
  mavenCentral()
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

group = 'com.jacobo.gradle'

dependencies {
  compile gradleApi()
  compile localGroovy()
  testCompile "org.spockframework:spock-core:0.6-groovy-1.8" 
}

task('unversionedJar', type: Jar, dependsOn: 'jar') {
  version = null
  from sourceSets.main.output
}

task('installPlugin', type: Copy, dependsOn: 'unversionedJar') {
  def gradleInstallDir = gradle.gradleHomeDir
  group = 'installation'
  description = 'Installs the plugin jar in your gradle distribution.'
  from "${buildDir}/libs/${unversionedJar.archiveName}"
  into "/${gradleInstallDir}/lib/plugins"
}

installPlugin.doLast {
  def gradleInstallDir = gradle.gradleHomeDir
  println "Installed in: ${gradleInstallDir}/lib/plugins as: ${unversionedJar.archiveName}"
}

task('uninstallPlugin', type: Delete) {
  def gradleInstallDir = gradle.gradleHomeDir
  group = 'installation'
  description = 'Removes the plugin from your gradle distribution.'
  delete("/${gradleInstallDir}/lib/plugins/${unversionedJar.archiveName}")
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url : bintray_api_base_url + '/maven/' + bintray_username + '/' + bintray_repo + '/' + bintray_package + '/') {
	try {
	  authentication(userName: bintray_username, password: bintray_api_key)
	} catch (MissingPropertyException pne) {
	  // ignore, don't authenticate
	}
      }
      pom {
	project {
	  name 'gradle-wsdl-plugin'
	  description 'A Gradle plugin for establishing conventions for Web Service Projects'
	  url 'https://github.com/djmijaes/gradle-wsdl-plugin'
	  licenses {
	    license {
	      name 'Apache License, Version 2.0'
	      url 'http://www.apache.org/licenses/LICENSE-2.0'
	      distribution 'repo'
	    }
	  }
	  developers {
	    developer {
	      id 'djmijares'
	      name 'Daniel Mijares'
	      email 'daniel.j.mijares@gmail.com'
	    }
	  }
	}
      }   
      // // Dirty hack for GRADLE-1285
      // pom.withXml { root ->
      //     def children = root.asNode().children()
      //     def versionIndex = children.indexOf(children.find {it.name().localPart == 'version'})
      //     children.add(versionIndex + 1, new Node(null, 'packaging', 'jar'))
      // }
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.6"
}
