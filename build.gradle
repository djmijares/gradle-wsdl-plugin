buildscript{ 
  apply from: 'buildscript.gradle'
}

apply from: 'publishing.gradle'
apply plugin: 'groovy'
apply from: 'cobertura.gradle'
apply from: 'integTest.gradle'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  mavenCentral()
  maven { 
    url 'http://dl.bintray.com/content/djmijares/gradle-plugins/'
  }
}

group = 'org.gradle.jacobo.plugins'

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile 'org.gradle.jacobo:gradle-xsd-wsdl-slurping:1.1.1'
  compile 'com.google.inject:guice:3.0'
  testCompile "org.spockframework:spock-core:0.7-groovy-1.8"
  testCompile 'cglib:cglib-nodep:2.2'
  testCompile 'org.objenesis:objenesis:1.2'
}

groovydoc {
  docTitle = "Gradle WSDL Plugin"
  link("http://groovy.codehaus.org/gapi/", "groovy.", "org.codehaus.groovy.")
  link("http://docs.oracle.com/javase/7/docs/api/", "java.")
  link("http://google-guice.googlecode.com/svn/trunk/javadoc/", "com.google.")
  link("http://www.gradle.org/docs/current/javadoc/", "org.gradle.", "org.gradle.api")
}

task groovyDocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

task groovySourceJar(type: Jar, dependsOn: 'jar') {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task('unversionedJar', type: Jar, dependsOn: 'jar') {
  version = null
  from sourceSets.main.output
}

task('installPlugin', type: Copy, dependsOn: 'unversionedJar') {
  def gradleInstallDir = gradle.gradleHomeDir
  group = 'installation'
  description = 'Installs the plugin jar in your gradle distribution.'
  from "${buildDir}/libs/${unversionedJar.archiveName}"
  into "/${gradleInstallDir}/lib/plugins"
}

installPlugin.doLast {
  def gradleInstallDir = gradle.gradleHomeDir
  println "Installed in: ${gradleInstallDir}/lib/plugins as: ${unversionedJar.archiveName}"
}

task('uninstallPlugin', type: Delete) {
  def gradleInstallDir = gradle.gradleHomeDir
  group = 'installation'
  description = 'Removes the plugin from your gradle distribution.'
  delete("/${gradleInstallDir}/lib/plugins/${unversionedJar.archiveName}")
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

artifacts {
  archives jar, groovyDocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.11"
}
